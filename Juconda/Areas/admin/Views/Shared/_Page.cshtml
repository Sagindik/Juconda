@model Juconda.Areas.admin.ViewModels.Pagination.PageViewModel

@{
    int rangeStart = Math.Max(1, Model.Page - 2);
    int rangeEnd = Math.Min(Model.PageCount, Model.Page + 2);

    // Adjust the range if it exceeds the total number of pages
    if (rangeEnd - rangeStart < 4)
    {
        if (rangeStart == 1)
        {
            rangeEnd = Math.Min(Model.PageCount, rangeStart + 4);
        }
        else
        {
            rangeStart = Math.Max(1, rangeEnd - 4);
        }
    }

    // Pass the page number range to the view
    List<int> pageRange = Enumerable.Range(rangeStart, rangeEnd - rangeStart + 1).ToList();
}

@if (Model.CountTotal > Model.Take)
{
    <nav>
        <ul class="pagination">

            <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                @if (Model.HasPreviousPage)
                {
                    <a type="button" onclick="GetPage(@(Model.Page - 1))" class="page-link">Предыдущая</a>
                }
                else
                {
                    <span class="page-link">Предыдущая</span>
                }
            </li>

            @if (rangeStart > 1)
            {
                <li class="page-item">
                    <a type="button" onclick="GetPage(1)" class="page-link">1</a>
                </li>
            }

            @if (rangeStart > 2)
            {
                <li class="page-item disabled">
                    <a class="page-link">...</a>
                </li>
            }

            @foreach (int pageNumber in pageRange)
            {
                <li class="page-item @(Model.Page == pageNumber  ? "active" : "")">
                    <a type="button" onclick="GetPage(@pageNumber )" class="page-link">@pageNumber</a>
                </li>
            }

            @if (rangeEnd < Model.PageCount - 1)
            {
                <li class="page-item disabled">
                    <a class="page-link">...</a>
                </li>
            }

            @if (rangeEnd < Model.PageCount)
            {
                <li class="page-item">
                    <a type="button" onclick="GetPage(@Model.PageCount)" class="page-link">@Model.PageCount</a>
                </li>
            }

            <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                @if (Model.HasNextPage)
                {
                    <a type="button" class="page-link" onclick="GetPage(@(Model.Page + 1))">Следующая</a>
                }
                else
                {
                    <span class="page-link">Следующая</span>
                }
            </li>
        </ul>
    </nav>
}